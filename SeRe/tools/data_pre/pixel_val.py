import os

import torch
from PIL import Image
import numpy as np
import cv2
from filename2txt import txt2filename
import inspect

# “L”表示转灰度
# img_L = np.array(Image.open('test.png').convert("L"))
# img_RGB = np.array(Image.open('test.png').convert("RGB"))

# temp = {}
# for i in range(img_L.shape[0]):
#   for j in range(img_L.shape[1]):
#     if not temp.get(int(img_L[i][j])):
#       temp[int(img_L[i][j])] = list(img_RGB[i][j])
# print(temp)

Dataroot = '/home/xjw/Downloads/code/mmsegmentation-0.21.0/data/xiangtan/annotations/'
a = []


def get_variable_name(variable):
    callers_local_vars = inspect.currentframe().f_back.f_locals.items()
    return [var_name for var_name, var_val in callers_local_vars if var_val is variable]


def pixel_img_ratio(img_path, num_class):
    img_L = np.array((Image.open(Dataroot + img_path)))
    # 这里得到灰度像素值0对应(0,0,0),62对应(19,69,139)
    num = []
    for i in range(num_class):
        num.append(np.where(img_L == i)[0].shape[0])
    pixel_sum = img_L.shape[0] * img_L.shape[1]
    for i in range(num_class):
        print('0_0_' + str(i) + '像素个数：{} 占比：%{}'.format(num[i], num[i] / pixel_sum * 100))


def pixel_val_num(img_path, num_class):
    img_L = np.array((Image.open(Dataroot + img_path)))
    # 这里得到灰度像素值0对应(0,0,0),62对应(19,69,139)
    num = []
    for i in range(num_class):
        num.append(np.where(img_L == i)[0].shape[0])
    pixel_sum = img_L.shape[0] * img_L.shape[1]
    num.append(pixel_sum)
    # for i in range(num_class):
    #     print('0_0_' + str(i) + '像素个数：{} 占比：%{}'.format(num[i], num[i] / pixel_sum * 100))
    return num


def pixel_data_ratio(txt_path, num_class):
    filenames = txt2filename(txt_path)
    data_num = np.array([0] * (num_class + 1))
    for ch in filenames:
        num = pixel_val_num(ch + '.tif', num_class)
        num = np.array(num)
        data_num = data_num + num

        if sum(i for i in data_num[:-1]) != data_num[-1]:
            print(ch)
            break
    data_num = list(data_num)
    for i in range(num_class):
        print('0_0_' + str(i) + '像素个数：{} 占比：%{}'.format(data_num[i], data_num[i] / data_num[-1] * 100))
    print(sum(i for i in data_num[:-1]))
    print(len(filenames) * 256 * 256)


if __name__ == "__main__":
    #############################
    # 统计单张大图有没有像素值出错
    # imgs = os.listdir(Dataroot)
    # for ch in imgs:
    #     # print(ch)
    #     pixel_img_ratio(ch)
    #############################

    # 统计划分的数据集的像素比例
    pixel_data_ratio('/home/xjw/Downloads/code/mmsegmentation-0.21.0/data/xiangtan/train.txt', 9)
##########################################
"""
0_0_0 像素个数：154686027 占比：%29.3572320511092
0_0_1 像素个数：24717101 占比：%4.690958089496366
0_0_2 像素个数：9394706 占比：%1.7829830492313823
0_0_3 像素个数：82981706 占比：%15.748760546024759
0_0_4 像素个数：120229378 占比：%22.817844751462417
0_0_5 像素个数：134900522 占比：%25.602221512675875
0_0_6 像素个数：0 占比：%0.0
526909440
526909440

0_0_0 像素个数：157770267 占比：%29.942577418996326
0_0_1 像素个数：24419892 占比：%4.634552001953125
0_0_2 像素个数：9733002 占比：%1.8471868714289879
0_0_3 像素个数：80833011 占比：%15.340968459399779
0_0_4 像素个数：117914728 占比：%22.37855674022466
0_0_5 像素个数：136238540 占比：%25.856158507997122
0_0_6 像素个数：0 占比：%0.0
526909440
526909440

0_0_0 像素个数：312456294 占比：%29.64990473505276
0_0_1 像素个数：49136993 占比：%4.6627550457247455
0_0_2 像素个数：19127708 占比：%1.8150849603301848
0_0_3 像素个数：163814717 占比：%15.544864502712269
0_0_4 像素个数：238144106 占比：%22.598200745843535
0_0_5 像素个数：271139062 占比：%25.7291900103365
0_0_6 像素个数：0 占比：%0.0
1053818880
1053818880

0_0_0 像素个数：77024902 占比：%29.221947592683602
0_0_1 像素个数：13514533 占比：%5.127185686852196
0_0_2 像素个数：4494714 占比：%1.705218618156778
0_0_3 像素个数：40432457 占比：%15.33939166189959
0_0_4 像素个数：60059050 占比：%22.785389737547007
0_0_5 像素个数：68060136 占比：%25.82086670286083
0_0_6 像素个数：0 占比：%0.0
263585792
263585792
"""
##############################################
'''
0_0_0像素个数：16831387 占比：%3.2321493060949495
0_0_1像素个数：160492803 占比：%30.819605172745625
0_0_2像素个数：3648847 占比：%0.7006920047109985
0_0_3像素个数：26914306 占比：%5.168383060880672
0_0_4像素个数：30252637 占比：%5.809446344920499
0_0_5像素个数：242953011 占比：%46.654527396781305
0_0_6像素个数：16777503 占比：%3.2218019037561154
0_0_7像素个数：21935662 占比：%4.21232871135536
0_0_8像素个数：942900 占比：%0.18106609875448337
520749056
520749056


0_0_0像素个数：20980825 占比：%4.0284633576472455
0_0_1像素个数：155242970 占比：%29.807722822021088
0_0_2像素个数：4190559 占比：%0.8046162807972937
0_0_3像素个数：26595702 占比：%5.1065585351341305
0_0_4像素个数：30003088 占比：%5.760800188947087
0_0_5像素个数：243335236 占比：%46.72204652822016
0_0_6像素个数：17315221 占比：%3.3246420637922527
0_0_7像素个数：22329628 占比：%4.287442852599645
0_0_8像素个数：821363 占比：%0.15770737084109962
520814592
520814592


0_0_0像素个数：37812212 占比：%3.6303313842228104
0_0_1像素个数：315735773 占比：%30.31363216316858
0_0_2像素个数：7839406 占比：%0.7526574122525443
0_0_3像素个数：53510008 占比：%5.137468852983624
0_0_4像素个数：60255725 占比：%5.785121736506688
0_0_5像素个数：486288247 占比：%46.68828908667903
0_0_6像素个数：34092724 占比：%3.2732252191658673
0_0_7像素个数：44265290 占比：%4.249888145097783
0_0_8像素个数：1764263 占比：%0.16938599992306952
1041563648
1041563648


0_0_0像素个数：11872756 占比：%4.559876148868141
0_0_1像素个数：76588603 占比：%29.41478323102327
0_0_2像素个数：964298 占比：%0.37035035931010885
0_0_3像素个数：11509066 占比：%4.420196586971825
0_0_4像素个数：12565659 占比：%4.825993962051465
0_0_5像素个数：131273598 占比：%50.41721976736526
0_0_6像素个数：6606034 占比：%2.5371275949082084
0_0_7像素个数：8889942 占比：%3.414290202765149
0_0_8像素个数：104572 占比：%0.04016214673656557
260374528
260374528


'''